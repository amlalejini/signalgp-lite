# only build pull requests and merges to master or dev
# adapted from https://stackoverflow.com/a/31882307
if: (type = push AND branch IN (master, dev)) OR (type = pull_request AND NOT branch =~ /no-ci/)
dist: xenial
sudo: required

services:
- docker

jobs:
  include:
  - stage: Tests

    name: Unit Tests (clang, debug mode)
    env: CXX=clang++
    install:
    - docker build -t mmore500/signalgp-lite .
    - docker ps -a
    script:
    - sudo docker run -e CXX --cap-add=SYS_ADMIN -e CXX -i mmore500/signalgp-lite /bin/bash -c "set -x && cd /opt/signalgp-lite/tests && make"

    name: Unit Tests (gcc, debug mode)
    env: CXX=g++
    install:
    - docker build -t mmore500/signalgp-lite .
    - docker ps -a
    script:
    - sudo docker run -e CXX --cap-add=SYS_ADMIN -e CXX -i mmore500/signalgp-lite /bin/bash -c "set -x && cd /opt/signalgp-lite/tests && make"

  - name: Unit Tests (clang, full debug mode)
    env: CXX=clang++
    install:
    - docker build -t mmore500/signalgp-lite .
    - docker ps -a
    script:
    - sudo docker run -e CXX --cap-add=SYS_ADMIN -e CXX -i mmore500/signalgp-lite /bin/bash -c "set -x && cd /opt/signalgp-lite/tests && make fulldebug"

  - name: Unit Tests (gcc, full debug mode)
    env: CXX=g++
    install:
    - docker build -t mmore500/signalgp-lite .
    - docker ps -a
    script:
    - sudo docker run -e CXX --cap-add=SYS_ADMIN -e CXX -i mmore500/signalgp-lite /bin/bash -c "set -x && cd /opt/signalgp-lite/tests && make fulldebug"

  - name: Unit Tests (clang, opt mode)
    env: CXX=clang++
    install:
    - docker build -t mmore500/signalgp-lite .
    - docker ps -a
    script:
    - sudo docker run -e CXX --cap-add=SYS_ADMIN -e CXX -i mmore500/signalgp-lite /bin/bash -c "set -x && cd /opt/signalgp-lite/tests && make opt"

  - name: Unit Tests (gcc, opt mode)
    env: CXX=g++
    install:
    - docker build -t mmore500/signalgp-lite .
    - docker ps -a
    script:
    - sudo docker run -e CXX --cap-add=SYS_ADMIN -e CXX -i mmore500/signalgp-lite /bin/bash -c "set -x && cd /opt/signalgp-lite/tests && make opt"

  - name: Coverage
    env: CXX=clang++
    install:
    - docker build -t mmore500/signalgp-lite .
    - docker ps -a
    script:
    - ci_env=`bash <(curl -s https://codecov.io/env)`
    - sudo docker run $ci_env -e CXX mmore500/signalgp-lite /bin/bash -c "cd /opt/signalgp-lite && make coverage && bash <(curl -s https://codecov.io/bash)"

  - name: Fuzzing
    install:
    - docker build -t mmore500/signalgp-lite .
    - docker ps -a
    script:
    - sudo docker run --cap-add=SYS_PTRACE --security-opt seccomp=unconfined -e CXX -e OSF_PASSWORD -e CONTEXT=travis mmore500/signalgp-lite /bin/bash -c "cd /opt/signalgp-lite/fuzzing && make && make opt"

  - name: Microbenchmarks
    env: CXX=clang++
    install:
    - docker build -t mmore500/signalgp-lite .
    - docker ps -a
    script:
    - sudo docker run -e CXX -e OSF_PASSWORD -e CONTEXT=travis mmore500/signalgp-lite /bin/bash -c "cd /opt/signalgp-lite/microbenchmarks && make"

  - name: Source (clang)
    env: CXX=clang++
    install:
    - docker build -t mmore500/signalgp-lite .
    - docker ps -a
    script:
    - sudo docker run -e CXX --cap-add=SYS_ADMIN mmore500/signalgp-lite /bin/bash -c "cd /opt/signalgp-lite && make test"

  - name: Source (gcc)
    env: CXX=g++
    install:
    - docker build -t mmore500/signalgp-lite .
    - docker ps -a
    script:
    - sudo docker run -e CXX --cap-add=SYS_ADMIN mmore500/signalgp-lite /bin/bash -c "cd /opt/signalgp-lite && make test"

  - name: Docs, Miscellaneous
    install:
    - docker build -t mmore500/signalgp-lite .
    - docker ps -a
    script:
    - sudo docker run mmore500/signalgp-lite /bin/bash -c "cd /opt/signalgp-lite && ./ci/test_trailing_whitespace.sh && ./ci/test_tabs.sh && ./ci/test_missing_newlines.sh && ./ci/test_headerguards.sh && ./ci/test_alphabetize_includes.sh && python3 ci/test_readme_snippets.py && make docs"


  - stage: Deploy
    name: GitHub Pages
    if: (type = push AND branch IN (master))
    install:
    - docker build -t mmore500/signalgp-lite .
    - docker ps -a
    script:
    - docker run -e GH_TOKEN -e TRAVIS_BUILD_NUMBER mmore500/signalgp-lite /bin/bash -c "cd /opt/signalgp-lite && source third-party/emsdk/emsdk_env.sh && make web && make badges && ./ci/deploy_gh_pages.sh"

  # - name: DockerHub
  #   if: (type = push AND branch IN (master))
  #   install:
  #   - docker build -t mmore500/signalgp-lite .
  #   - docker ps -a
  #   script:
  #   - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  #   - docker push mmore500/signalgp-lite

env:
  global:
  - secure: neifsSUqaAAdXyWcfzpFlf8MF785F80Z9aUgNZzaHcrJrXxaryiRmfo0+H8neYNaqQga100YjQawguN5IUY+E3MKEQW/2St2m77c6bIwRxDt7eBXMwos82rH7LPw5ZVbUjeaJ02CzrmgpfpB2M6RzNuEiKkfB32Dr2QPw65w1n+h14vvHntgUyBXzVpdJ75aarnBAo49prffUPPWysyV9tQUhhngnobLOqbKr2OukpBh4JSbWwLmgmZzJCT8CtJ7yRMexmn3ybU2XrRxWcbOe/rhK3P/2TgmiOkC4HpnuROOuBKLCA/KQaVCqxLjIzL8XBYnJveIfzanUtRQiHbSjnU/MDJ8a/yqEQgyT4rx/tPlceV8ZxW1EzjCdE/P7BZzuIHj2Co0VflgcV4Tv4mGoTPu16O/uoozDUKHQIkV6F2vr9m5FX0s1uGxf/KX5P30YfMzqp6tEsopNGjDRETXY4jjvzQnJ3R4KCTmgf8b+k92Sm8KFudaWaqUZxmcrjuIiQykw1JKYD+OqLBE/HvpYpunURHd3QI3sX3FtMKu7gm5nK0bID6t2WxzxVvOqNlh7ZgK2/YnWUDhCYhHs1vExFSQggPNPy0PAYVHgdu3rYS7oEEhs072lHAa8ubMAA9A6c+QOMPWySD/YIahVqfXAHpAyA9IeP4JGNvyBOjFx0g=
  - secure: g6X5JnToZ9NKri4sh7KULYhWvg1J+EwBm5Zx6251IC74ndl32iX34PoCwYkBDUozK8uZoUbEg95stXsapBfy31W1Oej5Ev6WFGGqJqYGu4ZPx3w7dJFgSCDmqvJ0siy9P4YizCm1M8nUhs3du03wKddWlf5AxwLRLut1bq70G5GDuKRNyX0Q9MEjc7wFo68/emsCL78uab2si1JSLbgSMlAIrr+ynfx0oc8ZE9Xl46hYlhSlWJizpA5XezwdjWNn98v3xl6b+2dIdFeKQmLHFOxDZNHXSzIqj+udEPG/PTnUOjXvgom7l+j4DsN5UJMXCA/i2hCx4FFQAaZkL2w/sKUv5EUlq1w3PvTyBP9SolqLV8lD7jUkC/5F0YKKfvNAhr0cTMNpxtr/EcN+CIkOqWVX72VLCvnqQtpPFrFMSqg9ZSKfM3FkhCMnKQkm8gWu3kNXqbI+7xOFDAOdL+QUWN2wEcgRuMaF0kdi9XmFj2w6YnUHHbTA0u/SFIpAJztVgxnN1I5TJ0/P6inY6UpFnvZLKPiufPrU4ovqFkmmeh7BQ3Ncy75hMxZJ3u/NAqQ1vZ1qa9NJWoz/91OszEsYPs7nEIOR/S8/vLmgNYb+cZm1uKPPdsqmbK0U/eVIH3pHdhCblyFNrvbpAhynV22wZXmM8oe1Jt8htjpMkOffMWI=
