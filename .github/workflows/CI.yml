name: CI
on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches:
      - '**'

jobs:
  docker-build:
    name: Docker Build
    runs-on: ubuntu-20.04
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          fetch-depth: 0 # fetch all history for all branches and tags
      - name: Push to GitHub Container Registry
        uses: docker/build-push-action@v1
        with:
          push: true
          tags: "GITHUB_ACTION_${{ github.run_number }}"
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          repository: mmore500/signalgp-lite
          registry: ghcr.io
          add_git_labels: true

  misc:
    name: Docs, Miscellaneous
    runs-on: ubuntu-20.04
    container:
      image: "ghcr.io/mmore500/signalgp-lite:GITHUB_ACTION_${{ github.run_number }}"
    needs:
      - docker-build
    steps:
      - run: |
          cd /opt/signalgp-lite
          ./ci/test_tidy.sh
          python3 ci/test_readme_snippets.py
          make docs

  unit-clang-debug:
    name: Unit Tests (clang, debug mode)
    runs-on: ubuntu-20.04
    container:
      image: "ghcr.io/mmore500/signalgp-lite:GITHUB_ACTION_${{ github.run_number }}"
      options: --cap-add=SYS_ADMIN
    needs:
      - docker-build
    env:
      CXX: clang++
    steps:
      - run: |
          set -x
          cd /opt/signalgp-lite/tests
          make

  unit-gcc-debug:
    name: Unit Tests (gcc, debug mode)
    runs-on: ubuntu-20.04
    container:
      image: "ghcr.io/mmore500/signalgp-lite:GITHUB_ACTION_${{ github.run_number }}"
      options: --cap-add=SYS_ADMIN
    needs:
      - docker-build
    env:
      CXX: g++
    steps:
      - run: |
          set -x
          cd /opt/signalgp-lite/tests
          make

  unit-clang-opt:
    name: Unit Tests (clang, opt mode)
    runs-on: ubuntu-20.04
    container:
      image: "ghcr.io/mmore500/signalgp-lite:GITHUB_ACTION_${{ github.run_number }}"
      options: --cap-add=SYS_ADMIN
    needs:
      - docker-build
    env:
      CXX: clang++
    steps:
      - run: |
          set -x
          cd /opt/signalgp-lite/tests
          make opt

  unit-gcc-opt:
    name: Unit Tests (gcc, opt mode)
    runs-on: ubuntu-20.04
    container:
      image: "ghcr.io/mmore500/signalgp-lite:GITHUB_ACTION_${{ github.run_number }}"
      options: --cap-add=SYS_ADMIN
    needs:
      - docker-build
    env:
      CXX: g++
    steps:
      - run: |
          set -x
          cd /opt/signalgp-lite/tests
          make opt

  coverage:
    name: Coverage
    runs-on: ubuntu-20.04
    container:
      image: "ghcr.io/mmore500/signalgp-lite:GITHUB_ACTION_${{ github.run_number }}"
    needs:
      - docker-build
    env:
      CXX: clang++
    steps:
      - run: |
          ci_env=$(bash <(curl -s https://codecov.io/env))
          export $ci_env
          cd /opt/signalgp-lite
          make coverage
          bash <(curl -s https://codecov.io/bash)

  fuzzing:
    name: Fuzzing
    runs-on: ubuntu-20.04
    container:
      image: "ghcr.io/mmore500/signalgp-lite:GITHUB_ACTION_${{ github.run_number }}"
      options: --cap-add=SYS_PTRACE --security-opt seccomp=unconfined
    needs:
      - docker-build
    env:
      CONTEXT: travis
    steps:
      - run: |
          cd /opt/signalgp-lite/fuzzing
          make
          make opt

  microbenchmarks:
    name: Microbenchmarks
    runs-on: ubuntu-20.04
    container:
      image: "ghcr.io/mmore500/signalgp-lite:GITHUB_ACTION_${{ github.run_number }}"
    needs:
      - docker-build
    env:
      CXX: clang++
      OSF_TOKEN: ${{ secrets.OSF_TOKEN }}
      CONTEXT: travis
    steps:
      - run: |
          cd /opt/signalgp-lite/microbenchmarks
          make

  source-clang:
    name: Source (clang)
    runs-on: ubuntu-20.04
    container:
      image: "ghcr.io/mmore500/signalgp-lite:GITHUB_ACTION_${{ github.run_number }}"
      options: --cap-add=SYS_ADMIN
    needs:
      - docker-build
    env:
      CXX: clang++
    steps:
      - run: |
          cd /opt/signalgp-lite
          make test

  source-gcc:
    name: Source (gcc)
    runs-on: ubuntu-20.04
    container:
      image: "ghcr.io/mmore500/signalgp-lite:GITHUB_ACTION_${{ github.run_number }}"
      options: --cap-add=SYS_ADMIN
    needs:
      - docker-build
    env:
      CXX: g++
    steps:
      - run: |
          cd /opt/signalgp-lite
          make test

  deploy-github-pages:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-20.04
    container:
      image: "ghcr.io/mmore500/signalgp-lite:GITHUB_ACTION_${{ github.run_number }}"
    needs:
      - misc
      - unit-clang-debug
      - unit-gcc-debug
      - unit-clang-opt
      - unit-gcc-opt
      - coverage
      - fuzzing
      - microbenchmarks
      - source-clang
      - source-gcc
    env:
      GH_TOKEN: ${{ github.token }}
      GITHUB_RUN_ID: ${{ github.run_id }}
    steps:
      - run: |
          cd /opt/signalgp-lite
          source third-party/emsdk/emsdk_env.sh
          make web
          make badges
          ./ci/deploy_gh_pages.sh

  deploy-container:
    name: Deploy Container to ghcr.io
    runs-on: ubuntu-20.04
    needs:
      - misc
      - unit-clang-debug
      - unit-gcc-debug
      - unit-clang-opt
      - unit-gcc-opt
      - coverage
      - fuzzing
      - microbenchmarks
      - source-clang
      - source-gcc
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          fetch-depth: 0 # fetch all history for all branches and tags
      - name: Push to DockerHub
        uses: docker/build-push-action@v1
        with:
          push: true
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          repository: mmore500/signalgp-lite
          registry: ghcr.io
          tag_with_ref: true
          tag_with_sha: true
          add_git_labels: true
